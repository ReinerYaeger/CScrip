class = class
struct = struct
list = list
array = array
increment = ++
decrement = --
equivalent_op = =
assign_op = =
print_statement = print
add_op = \+
sub_op = -
expo_op = **
mul_op = *
div_op = /
less_or_eq_op = <=
great_or_eq_op = >=
and = & &
or = ||
less_op = <
great_op = >
left_par_op = (
right_par_op = )
left_curl_op = {
right_curl_op = }
left_square_op = [
right_square_op = ]
question_op = ?
not_equal = !=
if_statement = if
elif_statement = elif
else_statement = else
while_statement = while
for_statement = for
do_statement = do
break_statement = break
return_statement = return
full_stop_statement = .
comma_statement = ,
colon_statement = :
semi_colon_statement = ;
single_quotes = '
double_quotes = "
int_declaration = int
float_declaration = float
double_declaration = double
string_declaration = string
char_declaration = char
float_literal = (\.\d+)?.\d+f
double_literal = \d+\.\d+
string_literal = \'[^\']*\'|\"[^\"]*\
char_literal = [\'a-zA-Z\']
identifier = [a-zA-Z_][a-zA-Z_\d+]*